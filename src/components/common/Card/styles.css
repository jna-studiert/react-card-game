:root {
    --basic-rotation: 0deg;
}

.card {
    width: 100%;
    height: 100%;
    position: relative;
    cursor: pointer;
    border-radius: 20px;
    transform-style: preserve-3d;
    transform: rotateY(var(--basic-rotation));
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
}

.card-front,
.card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    backface-visibility: hidden;
    border-radius: 20px;
}

.card-front {
    background: white;
    color: red;
    font-size: 40px;
    transform: rotateY(180deg);
}

.card-back {
    /* background: repeating-linear-gradient(
        45deg,
        #456,
        #456 10px,
        #567 10px,
        #567 20px
    ); */
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%"><defs><pattern id="crystal-pattern" width="60" height="60" patternUnits="userSpaceOnUse" patternTransform="rotate(30)"><path d="M30,0 L60,30 L30,60 L0,30 Z M30,10 L50,30 L30,50 L10,30 Z" fill="none" stroke="%234b5563" stroke-width="2" /></pattern></defs><rect width="100%" height="100%" fill="url(%23crystal-pattern)" /></svg>');
}

.card-value {
    font-size: 24px;
    font-weight: bold;
}

.card-suit {
    font-size: 48px;
}

.card.flip {
    animation: flip 0.6s forwards ease-in-out;
    animation-delay: calc(
        var(--animation-duration) - 0.6s + var(--animation-delay)
    );
}

@keyframes flip {
    to {
        transform: rotateY(calc(var(--basic-rotation) + 180deg));
    }
}
